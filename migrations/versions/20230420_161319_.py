"""empty message

Revision ID: cad178bcdb72
Revises: 
Create Date: 2023-04-20 16:13:19.240284

"""
from alembic import op
import sqlalchemy as sa


import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'cad178bcdb72'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE categories SET SCHEMA {SCHEMA};")

    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('img_url', sa.String(length=10), nullable=False),
    sa.Column('organizer', sa.String(length=50), nullable=False),
    sa.Column('num_members', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE groups SET SCHEMA {SCHEMA};")

    op.create_table('interests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('interest', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE interests SET SCHEMA {SCHEMA};")

    op.create_table('themes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE themes SET SCHEMA {SCHEMA};")

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('details', sa.String(), nullable=False),
    sa.Column('num_going', sa.Integer(), nullable=True),
    sa.Column('group_limit', sa.Integer(), nullable=False),
    sa.Column('host', sa.String(length=50), nullable=False),
    sa.Column('format', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=True),
    sa.Column('strangers', sa.Boolean(), nullable=True),
    sa.Column('online', sa.Boolean(), nullable=False),
    sa.Column('saved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE events SET SCHEMA {SCHEMA};")

    op.create_table('group_categories',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], )
    )
    if environment == "production":
        op.execute(f"ALTER TABLE group_categories SET SCHEMA {SCHEMA};")

    op.create_table('user_groups',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    if environment == "production":
        op.execute(f"ALTER TABLE user_groups SET SCHEMA {SCHEMA};")

    op.create_table('user_interests',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'interest_id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE user_interests SET SCHEMA {SCHEMA};")

    op.create_table('event_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE event_images SET SCHEMA {SCHEMA};")

    op.create_table('event_themes',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('theme_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['theme_id'], ['themes.id'], )
    )
    if environment == "production":
        op.execute(f"ALTER TABLE event_themes SET SCHEMA {SCHEMA};")

    op.create_table('user_events',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    if environment == "production":
        op.execute(f"ALTER TABLE user_events SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_events')
    op.drop_table('event_themes')
    op.drop_table('event_images')
    op.drop_table('user_interests')
    op.drop_table('user_groups')
    op.drop_table('group_categories')
    op.drop_table('events')
    op.drop_table('users')
    op.drop_table('themes')
    op.drop_table('interests')
    op.drop_table('groups')
    op.drop_table('categories')
    # ### end Alembic commands ###